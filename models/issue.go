package models

import "github.com/go-swagger/go-swagger/strfmt"

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

/*Issue issue

swagger:model Issue
*/
type Issue struct {

	/* Expand expand
	 */
	Expand string `json:"expand,omitempty"`

	/* Fields fields
	 */
	Fields *IssueFields `json:"fields,omitempty"`

	/* ID id
	 */
	ID int64 `json:"id,omitempty"`

	/* Key key
	 */
	Key string `json:"key,omitempty"`

	/* Self self
	 */
	Self string `json:"self,omitempty"`
}

// Validate validates this issue
func (m *Issue) Validate(formats strfmt.Registry) error {
	return nil
}

/*IssueFields issue fields

swagger:model IssueFields
*/
type IssueFields struct {

	/* Assignee assignee
	 */
	Assignee *User `json:"assignee,omitempty"`

	/* Components components
	 */
	Components []string `json:"components,omitempty"`

	/* Created created
	 */
	Created string `json:"created,omitempty"`

	/* Creator creator
	 */
	Creator *User `json:"creator,omitempty"`

	/* Description description
	 */
	Description string `json:"description,omitempty"`

	/* Issuetype issuetype
	 */
	Issuetype *IssueIssueFieldsIssuetype `json:"issuetype,omitempty"`

	/* Labels labels
	 */
	Labels []string `json:"labels,omitempty"`

	/* Priority priority
	 */
	Priority *IssueIssueFieldsPriority `json:"priority,omitempty"`

	/* Project project
	 */
	Project *IssueIssueFieldsProject `json:"project,omitempty"`

	/* Reporter reporter
	 */
	Reporter *User `json:"reporter,omitempty"`

	/* Resolution resolution
	 */
	Resolution *IssueIssueFieldsResolution `json:"resolution,omitempty"`

	/* Resolutiondate resolutiondate
	 */
	Resolutiondate string `json:"resolutiondate,omitempty"`

	/* Status status
	 */
	Status *IssueIssueFieldsStatus `json:"status,omitempty"`

	/* Summary summary
	 */
	Summary string `json:"summary,omitempty"`

	/* Updated updated
	 */
	Updated string `json:"updated,omitempty"`

	/* Watches watches
	 */
	Watches *IssueIssueFieldsWatches `json:"watches,omitempty"`
}

// Validate validates this issue fields
func (m *IssueFields) Validate(formats strfmt.Registry) error {
	return nil
}

/*IssueIssueFieldsIssuetype issue issue fields issuetype

swagger:model IssueIssueFieldsIssuetype
*/
type IssueIssueFieldsIssuetype struct {

	/* Description description
	 */
	Description string `json:"description,omitempty"`

	/* IconURL icon url
	 */
	IconURL string `json:"iconUrl,omitempty"`

	/* e.g. Task, Bug, Feature
	 */
	Name string `json:"name,omitempty"`

	/* Subtask subtask
	 */
	Subtask bool `json:"subtask,omitempty"`
}

// Validate validates this issue issue fields issuetype
func (m *IssueIssueFieldsIssuetype) Validate(formats strfmt.Registry) error {
	return nil
}

/*IssueIssueFieldsPriority issue issue fields priority

swagger:model IssueIssueFieldsPriority
*/
type IssueIssueFieldsPriority struct {

	/* Name name
	 */
	Name string `json:"name,omitempty"`
}

// Validate validates this issue issue fields priority
func (m *IssueIssueFieldsPriority) Validate(formats strfmt.Registry) error {
	return nil
}

/*IssueIssueFieldsProject issue issue fields project

swagger:model IssueIssueFieldsProject
*/
type IssueIssueFieldsProject struct {

	/* Key key
	 */
	Key string `json:"key,omitempty"`

	/* Name name
	 */
	Name string `json:"name,omitempty"`
}

// Validate validates this issue issue fields project
func (m *IssueIssueFieldsProject) Validate(formats strfmt.Registry) error {
	return nil
}

/*IssueIssueFieldsResolution issue issue fields resolution

swagger:model IssueIssueFieldsResolution
*/
type IssueIssueFieldsResolution struct {

	/* Name name
	 */
	Name string `json:"name,omitempty"`
}

// Validate validates this issue issue fields resolution
func (m *IssueIssueFieldsResolution) Validate(formats strfmt.Registry) error {
	return nil
}

/*IssueIssueFieldsStatus issue issue fields status

swagger:model IssueIssueFieldsStatus
*/
type IssueIssueFieldsStatus struct {

	/* IconURL icon url
	 */
	IconURL string `json:"iconUrl,omitempty"`

	/* e.g. Resolved
	 */
	Name string `json:"name,omitempty"`

	/* StatusCategory status category
	 */
	StatusCategory *IssueIssueIssueFieldsStatusStatusCategory `json:"statusCategory,omitempty"`
}

// Validate validates this issue issue fields status
func (m *IssueIssueFieldsStatus) Validate(formats strfmt.Registry) error {
	return nil
}

/*IssueIssueFieldsWatches issue issue fields watches

swagger:model IssueIssueFieldsWatches
*/
type IssueIssueFieldsWatches struct {

	/* Self self
	 */
	Self string `json:"self,omitempty"`

	/* WatchCount watch count
	 */
	WatchCount int64 `json:"watchCount,omitempty"`
}

// Validate validates this issue issue fields watches
func (m *IssueIssueFieldsWatches) Validate(formats strfmt.Registry) error {
	return nil
}

/*IssueIssueIssueFieldsStatusStatusCategory issue issue issue fields status status category

swagger:model IssueIssueIssueFieldsStatusStatusCategory
*/
type IssueIssueIssueFieldsStatusStatusCategory struct {

	/* e.g. green
	 */
	ColorName string `json:"colorName,omitempty"`

	/* e.g. done
	 */
	Key string `json:"key,omitempty"`

	/* e.g. Done
	 */
	Name string `json:"name,omitempty"`
}

// Validate validates this issue issue issue fields status status category
func (m *IssueIssueIssueFieldsStatusStatusCategory) Validate(formats strfmt.Registry) error {
	return nil
}
